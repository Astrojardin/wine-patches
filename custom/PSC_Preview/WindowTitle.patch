diff --git a/programs/explorer/desktop.c b/programs/explorer/desktop.c
index 84f6fa3..7015a66 100644
--- a/programs/explorer/desktop.c
+++ b/programs/explorer/desktop.c
@@ -21,6 +21,7 @@
 #include "config.h"
 #include "wine/port.h"
 #include <stdio.h>
+#include <stdlib.h>
 #include "wine/unicode.h"
 
 #define OEMRESOURCE
@@ -174,12 +175,23 @@ static BOOL get_default_desktop_size( const WCHAR *name, unsigned int *width, un
     WCHAR buffer[64];
     DWORD size = sizeof(buffer);
     BOOL found = FALSE;
-
+    char * pWidth;
+    char * pHeight;
     *width = 800;
     *height = 600;
 
+    pWidth = getenv ("WINDOW_WIDTH");
+    pHeight = getenv ("WINDOW_HEIGHT");
+
+    if (pWidth!=NULL && pHeight!=NULL)
+    {
+	*width = atoi(pWidth);
+    	*height = atoi(pHeight);
+	found = TRUE;
+    }
+
     /* @@ Wine registry key: HKCU\Software\Wine\Explorer\Desktops */
-    if (!RegOpenKeyW( HKEY_CURRENT_USER, desktop_keyW, &hkey ))
+    /* if (!RegOpenKeyW( HKEY_CURRENT_USER, desktop_keyW, &hkey ))
     {
         if (!RegQueryValueExW( hkey, name, 0, NULL, (LPBYTE)buffer, &size ))
         {
@@ -188,6 +200,8 @@ static BOOL get_default_desktop_size( const WCHAR *name, unsigned int *width, un
         }
         RegCloseKey( hkey );
     }
+    */
+    
     return found;
 }
 
@@ -223,7 +237,7 @@ static void initialize_display_settings( HWND desktop )
 
 static void set_desktop_window_title( HWND hwnd, const WCHAR *name )
 {
-    static const WCHAR desktop_nameW[] = {'W','i','n','e',' ','d','e','s','k','t','o','p',0};
+    static const WCHAR desktop_nameW[] = {'P','i','n','e','a','p','p','l','e',' ','S','m','a','s','h',' ','C','r','e','w',0};
     static const WCHAR desktop_name_separatorW[] = {' ', '-', ' ', 0};
     WCHAR *window_titleW = NULL;
     int window_title_len;
@@ -244,9 +258,9 @@ static void set_desktop_window_title( HWND hwnd, const WCHAR *name )
         return;
     }
 
-    strcpyW( window_titleW, name );
-    strcatW( window_titleW, desktop_name_separatorW );
-    strcatW( window_titleW, desktop_nameW );
+    strcpyW( window_titleW, desktop_nameW );
+    //strcatW( window_titleW, desktop_name_separatorW );
+    //strcatW( window_titleW, desktop_nameW );
 
     SetWindowTextW( hwnd, window_titleW );
     HeapFree( GetProcessHeap(), 0, window_titleW );
